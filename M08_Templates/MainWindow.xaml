<Window
    x:Class="M08_Templates.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:M08_Templates"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="450"
    mc:Ignorable="d">

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <!--
                        ControlTemplates definieren ein vollständig neues Layout für bestehende Elemente.
                        Hierbei können alle Controls und Container verwendet werden. Die Zuweisung zu den Elementen
                        erfolgt über deren Template-Property und den Key des Templates. Die Bindung von Propeties an
                        Properties des Elements erfolgt über ein TemplateBinding
                    -->
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="Bdr_Tp_Btn"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="DeepSkyBlue"
                            BorderThickness="2"
                            CornerRadius="50">
                            <!--
                                Statt dem ContentPresenter kann z.B. ein TextBlock verwendet werden, wenn auf speziele Eigenschaften,
                                wie z.B. die FontSize eingegangen werden soll
                            -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--  Trigger definieren veränderte Properties, wenn bestimmte Zustände eintreten  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bdr_Tp_Btn" Property="Background" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bdr_Tp_Btn" Property="Background" Value="DarkBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>
        <Button
            x:Name="Btn_ControlTemplate"
            Width="100"
            Height="100"
            Background="AliceBlue"
            Click="Btn_ControlTemplate_Click"
            Content="Hier Klicken!" />

        <!--  DataTemplate Bsp  -->
        <ListBox
            x:Name="Lbx_Personen"
            Height="100"
            ItemsSource="{Binding PersonenListe}"
            SelectedValuePath="Vorname">
            <ListBox.ItemTemplate>
                <!--
                    DataTemplates sind Vorlagen für das Layout von Items in ItemControls (z.B. ListView). Die Bindungen erfolgt an die
                    ItemSource des Zielelements per Kurzbindungen.
                -->
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Vorname}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Nachname}" />
                        <TextBlock Text="{Binding Alter, StringFormat=({0})}" />
                        <!--  Property 'Tag' kann für jedes beliebige Objekt benutzt werden, z.B. für Zusatzinformation, Metadaten, Referenzen  -->
                        <!--  Kurzbindung 'Binding' ohne Propertyangabe bindet immer an das ganze Objekt (hier: die ganze Person)  -->
                        <Button
                            x:Name="Btn_Loeschen_02"
                            Margin="2"
                            Click="Btn_Loeschen_02_Click"
                            Content="Löschen"
                            Tag="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button
            x:Name="Btn_Neu"
            Click="Btn_Neu_Click"
            Content="Neue Person" />
        <Button
            x:Name="Btn_Loeschen_01"
            Click="Btn_Loeschen_01_Click"
            Content="Lösche Person" />

        <Separator />

        <!--  SelectedIndex gibt die Indexposition des markierten Elements zurück  -->
        <TextBlock Text="{Binding SelectedIndex, ElementName=Lbx_Personen, StringFormat=SelectedIndex: \{0\}}" />

        <!--  SelectedItem gib das Objekt hinter dem markierten Element zurück  -->
        <TextBlock Text="{Binding ElementName=Lbx_Personen, Path=SelectedItem, StringFormat=SelectedItem: {0}}" />

        <!--  SelectedValue gibt die in der Property SelectedValuePath im ItemControl angegebene Property zurück  -->
        <TextBlock Text="{Binding ElementName=Lbx_Personen, Path=SelectedValue, StringFormat=SelectedValue: {0}}" />

    </StackPanel>
</Window>
